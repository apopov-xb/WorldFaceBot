import os
import requests
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
REPLICATE_API_TOKEN = os.getenv("REPLICATE_API_TOKEN")

COUNTRIES = {
    'üá©üá™ –ì–µ—Ä–º–∞–Ω–∏—è': 'German',
    'üáØüáµ –Ø–ø–æ–Ω–∏—è': 'Japanese',
    'üá≥üá¨ –ù–∏–≥–µ—Ä–∏—è': 'Nigerian',
    'üáÆüáπ –ò—Ç–∞–ª–∏—è': 'Italian',
}

user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ WorldFaceBot üåç\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—ë —Å–µ–ª—Ñ–∏ ‚Äî –∏ —è –ø–æ–∫–∞–∂—É, –∫–∞–∫ —Ç—ã –≤—ã–≥–ª—è–¥–∏—à—å –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö!"
    )

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data[update.message.chat_id] = {'photo': update.message.photo[-1].file_id}
    buttons = [[KeyboardButton(c)] for c in COUNTRIES.keys()]
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ 1 —Å—Ç—Ä–∞–Ω—É –¥–ª—è –Ω–∞—á–∞–ª–∞:",
        reply_markup=ReplyKeyboardMarkup(buttons, one_time_keyboard=True)
    )

def generate_image(country):
    prompt = f"Portrait of a {country} person in traditional national clothes, smiling, studio photo"
    url = "https://api.replicate.com/v1/predictions"
    headers = {
        "Authorization": f"Token {REPLICATE_API_TOKEN}",
        "Content-Type": "application/json"
    }
    data = {
        "version": "db21e45a3f28b463b9a2e2031443c0cf7e9c38ad7592b66c1eb0a1a4df96ecde",
        "input": {"prompt": prompt}
    }
    response = requests.post(url, json=data, headers=headers)
    prediction = response.json()
    return prediction.get("urls", {}).get("get", "https://via.placeholder.com/300.png?text=Image+processing")

async def handle_country(update: Update, context: ContextTypes.DEFAULT_TYPE):
    country_emoji = update.message.text
    if country_emoji in COUNTRIES:
        nationality = COUNTRIES[country_emoji]
        await update.message.reply_text(f"–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–≤–æ–π –æ–±—Ä–∞–∑ –∫–∞–∫ {country_emoji}...‚è≥")
        image_url = generate_image(nationality)
        await update.message.reply_photo(photo=image_url, caption=f"{country_emoji}: –í–æ—Ç –∫–∞–∫ —Ç—ã –º–æ–≥ –±—ã –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ {nationality} üòä")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É –∏–∑ —Å–ø–∏—Å–∫–∞.")

def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_country))
    app.run_polling()

if __name__ == "__main__":
    main()